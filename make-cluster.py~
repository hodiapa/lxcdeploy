#!/usr/bin/python
import sys
import os,getopt



def usage():
 print "./make-cluster.py -n <BASE-NAMe> -w <NUmber of worker nodes>\n"
 
def container_exists(CONTAINER_NAME):
   return os.path.exists('/var/lib/lxc/'+ CONTAINER_NAME)

def make_basecontainer(CONTAINER_NAME):
  os.system('./lxc-setup.sh ' +CONTAINER_NAME)
  
def make_slavecontainer(BASE_NAME, index):
 os.system('lxc-clone -o ' + BASE_NAME + '1' + ' -n ' + BASE_NAME + str(index) )

def main():
 #Check if root
 if os.geteuid() !=0:
   print 'Login as root to run this script..'
   sys.exit(0)
 
 #Process Flags
 try:
        opts, args = getopt.getopt(sys.argv[1:], "n:w: ")
 except getopt.GetoptError as err:
        # print help information and exit:
        print str(err) # will print something like "option -a not recognized"
        usage()
        sys.exit(1)

 if len(sys.argv) < 2:
    print "Missing arguments \n"
    usage()
    sys.exit(0)
 
 for o,a in opts:
  if o == "-n":
            BASE_NAME = a
  elif o in ("-h"):
            usage()
            sys.exit(0)
  elif o in ("-w"):
        try:
            WORKERS = int(a)
        except:
            print "-w accepts a number"
            usage()
            sys.exit(1)
  else:
            assert False, "unhandled option"

 
 # Sanity
 for i in range (1,WORKERS+2):
    if container_exists(BASE_NAME + str(i)):
         print "Container " + BASE_NAME+ str(i) + " Already exists!" 
         sys.exit(1)   
 #MAKE CONTAINERS
 for i in range (1,WORKERS+2):
    if i == 1:
        make_basecontainer(BASE_NAME + str(i)) 
    else:
        make_slavecontainer(BASE_NAME, i)
        
if __name__ == "__main__":main()
